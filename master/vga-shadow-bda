--- a/hw/vga.c
+++ b/hw/vga.c
@@ -2386,9 +2386,21 @@ static void spinlock_ioport_write(void *
         s->locked = false;
     }
 }
+static uint32_t shadow_bda_ioport_read(void *opaque, uint32_t addr)
+{
+    VGACommonState *s = opaque;
+    return s->shadow_bda[addr - VGA_OXT_SHADOW_BDA_BASE];
+}
+static void shadow_bda_ioport_write(void *opaque, uint32_t addr, uint32_t val)
+{
+    VGACommonState *s = opaque;
+    s->shadow_bda[addr - VGA_OXT_SHADOW_BDA_BASE] = val;
+}
 
 static const MemoryRegionPortio oxt_portio_list[] = {
     { 0, 1, 2, .read = spinlock_ioport_read, .write = spinlock_ioport_write }, /* 0x3800 */
+    { 0x00, VGA_OXT_SHADOW_BDA_SIZE, 1, .read = shadow_bda_ioport_read,
+                                        .write = shadow_bda_ioport_write }, /* 0x3802-0x383F */
     PORTIO_END_OF_LIST(),
 };
 
--- a/hw/vga_int.h
+++ b/hw/vga_int.h
@@ -78,6 +78,8 @@
 
 #define VGA_OXT_BASE			0x3800
 #define VGA_OXT_SPINLOCK		VGA_OXT_BASE
+#define VGA_OXT_SHADOW_BDA_BASE		(VGA_OXT_BASE + 0x2)
+#define VGA_OXT_SHADOW_BDA_SIZE		0x38
 
 struct vga_precise_retrace {
     int64_t ticks_per_char;
@@ -185,6 +187,8 @@ typedef struct VGACommonState {
     uint8_t is_vbe_vmstate;
     /* ioport spinlock */
     bool locked;
+    /* shadow BDA */
+    uint8_t shadow_bda[VGA_OXT_SHADOW_BDA_SIZE];
 } VGACommonState;
 
 static inline int c6_to_8(int v)
